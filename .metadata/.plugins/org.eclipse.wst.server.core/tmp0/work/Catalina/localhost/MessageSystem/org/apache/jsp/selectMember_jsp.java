/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2021-11-22 06:17:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.model.MemberDAO;
import com.model.MemberVO;

public final class selectMember_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.model.MemberVO");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.model.MemberDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<title>Forty by HTML5 UP</title>\r\n");
      out.write("		<meta charset=\"utf-8\" />\r\n");
      out.write("		<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("		<!--[if lte IE 8]><script src=\"assets/js/ie/html5shiv.js\"></script><![endif]-->\r\n");
      out.write("		<link rel=\"stylesheet\" href=\"assets/css/main.css\" />\r\n");
      out.write("		<!--[if lte IE 9]><link rel=\"stylesheet\" href=\"assets/css/ie9.css\" /><![endif]-->\r\n");
      out.write("		<!--[if lte IE 8]><link rel=\"stylesheet\" href=\"assets/css/ie8.css\" /><![endif]-->\r\n");
      out.write("		\r\n");
      out.write("	</head>\r\n");
      out.write("	<style>\r\n");
      out.write("	\r\n");
      out.write("	</style>\r\n");
      out.write("	<body style=\"text-align: center;\">\r\n");
      out.write("	");

		MemberDAO dao = new MemberDAO();
		ArrayList<MemberVO> al = dao.selectAll();
	//	System.out.println(al.size()); 잘 들어왔는지 확인하기 위해서 쓰는거!
	
	
      out.write("\r\n");
      out.write("		<!-- Wrapper -->\r\n");
      out.write("			<div id=\"wrapper\">\r\n");
      out.write("				<!-- Menu -->\r\n");
      out.write("					<nav id=\"Update\">	\r\n");
      out.write("						<table>\r\n");
      out.write("							<caption><h2>회원관리페이지</h2></caption>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>Email</td>\r\n");
      out.write("								<td>전화번호</td>\r\n");
      out.write("								<td>주소</td>		\r\n");
      out.write("							</tr>\r\n");
      out.write("							");
 for (int i=0; i<al.size(); i++){ 
      out.write("		\r\n");
      out.write("							\r\n");
      out.write("							<tr>\r\n");
      out.write("							\r\n");
      out.write("							<td>");
      out.print(al.get(i).getEmail() );
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(al.get(i).getTel() );
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(al.get(i).getAddress() );
      out.write("</td>	\r\n");
      out.write("							<td><a href=\"DeleteService?email=");
      out.print(al.get(i).getEmail());
      out.write("\">삭제</a></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							\r\n");
      out.write("							");
 }
      out.write("\r\n");
      out.write("							\r\n");
      out.write("							<!-- get 방식 - 쿼리스트링 -->\r\n");
      out.write("							\r\n");
      out.write("						<!-- null값 삭제 : delete from web_member where email is null -->	\r\n");
      out.write("							\r\n");
      out.write("						<!-- 이렇게 쓰로 <  %  %  > 로 하고 out 쓸때는 주석처리 됨! -->\r\n");
      out.write("							\r\n");
      out.write("							<!--  \r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							for(MemberVO vo:al){\r\n");
      out.write("								out.print(\"<tr>\");\r\n");
      out.write("								out.print(\"<td>\"+vo.getEmail()+\"</td>\");\r\n");
      out.write("								out.print(\"<td>\"+vo.getTel()+\"</td>\");\r\n");
      out.write("								out.print(\"<td>\"+vo.getAddress()+\"</td>\");\r\n");
      out.write("								out.print(\"<td><a href='DeleteService?email=\"+vo.getEmail()+\"'>삭제</a></td>\");\r\n");
      out.write("								//\"\" 주의하기 -> '' 를 써야 안에서 인식함..아니면 \"\"랑 \"\" 로 인식됨\r\n");
      out.write("								out.print(\"</tr>\");\r\n");
      out.write("							}\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("						-->\r\n");
      out.write("							\r\n");
      out.write("	\r\n");
      out.write("							\r\n");
      out.write("						</table>\r\n");
      out.write("					</nav>			\r\n");
      out.write("			</div>\r\n");
      out.write("		<!-- Scripts -->\r\n");
      out.write("			<script src=\"assets/js/jquery.min.js\"></script>\r\n");
      out.write("			<script src=\"assets/js/jquery.scrolly.min.js\"></script>\r\n");
      out.write("			<script src=\"assets/js/jquery.scrollex.min.js\"></script>\r\n");
      out.write("			<script src=\"assets/js/skel.min.js\"></script>\r\n");
      out.write("			<script src=\"assets/js/util.js\"></script>\r\n");
      out.write("			<!--[if lte IE 8]><script src=\"assets/js/ie/respond.min.js\"></script><![endif]-->\r\n");
      out.write("			<script src=\"assets/js/main.js\"></script>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
